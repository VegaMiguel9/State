{"version":3,"sources":["utils/helpers.js","utils/actions.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","utils/reducers.js","redux/store.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ProductItem","item","state","useSelector","dispatch","useDispatch","cart","image","price","quantity","_jsxs","className","children","Link","to","concat","_jsx","alt","src","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","_objectSpread","product","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","currentCategory","_useQuery","useQuery","loading","data","products","useEffect","forEach","then","length","filter","category","map","spinner","CategoryMenu","categories","categoryData","id","CartItem","_ref","placeholder","value","onChange","target","role","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","_slicedToArray","getCheckout","toggleCart","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","_toConsumableArray","stop","apply","arguments","getCart","res","redirectToCheckout","sessionId","checkout","session","cartOpen","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","_useStoreContext","useStoreContext","_useStoreContext2","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","_Fragment","description","disabled","p","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","defaultState","reducer","undefined","action","newState","createStore","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Provider","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e733fbb0.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY} from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ProductItem(item) {\n\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n  const { cart } = state;\n\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n\n\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport spinner from \"../../assets/spinner.gif\"\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nfunction ProductList() {\n\n\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n  \n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const products = data?.products || [];\n  \n  useEffect(() => {\n    //if there is data to be stored\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      // but let's also take each product and save it to IndexedDB using the helper function\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product)\n      });\n\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\n  \n    } else if (!loading) {\n      //since we are offline, get all if the data from the products store\n\n      idbPromise('products', 'get').then((products) => {\n        //use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        })\n      })\n    }\n  }, [data, loading, dispatch]);\n\n  \n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n  \n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, {useEffect} from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport {UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY} from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction CategoryMenu() {\n\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n  const { categories } = state;\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n\n  useEffect(() => {\n    //if categoryData exists or has changed from the response of useQuery, then run dispatch()\n\n    if(categoryData) {\n      //execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category)\n      }) \n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        })\n      })\n    }\n  }, [categoryData, loading, dispatch]);\n\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;","import React from 'react';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CartItem = ({ item }) => {\n\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n    const removeFromCart = item => {\n        dispatch({\n          type: REMOVE_FROM_CART,\n          _id: item._id\n        });\n        idbPromise('cart', 'delete', { ...item });\n      };\n\n\n    const onChange = (e) => {\n        const value = e.target.value;\n      \n        if (value === '0') {\n          dispatch({\n            type: REMOVE_FROM_CART,\n            _id: item._id\n          });\n\n          idbPromise('cart', 'delete', {...item})\n        } else {\n          dispatch({\n            type: UPDATE_CART_QUANTITY,\n            _id: item._id,\n            purchaseQuantity: parseInt(value)\n          });\n\n          idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value)})\n        }\n      };\n\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n            <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n            >\n            🗑️\n            </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n\n    const state = useSelector((state) => {\n      return state\n    });\n\n    const dispatch = useDispatch();\n\n    const [getCheckout, {data}] = useLazyQuery(QUERY_CHECKOUT);\n\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({\n                type: ADD_MULTIPLE_TO_CART,\n                products: [...cart]\n            })\n        };\n\n        if(!state.cart.length) {\n            getCart();\n        }\n    }, [state.cart.length, dispatch]);\n\n\n\n    function toggleCart() {\n        dispatch({type: TOGGLE_CART});\n    }\n\n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach(item => {\n            sum+= item.price * item.purchaseQuantity;\n        })\n\n        return sum.toFixed(2);\n    }\n\n\n    function submitCheckout() {\n        const productIds = [];\n\n        state.cart.forEach((item) => {\n            for (let i=0; i<item.purchaseQuantity; i++) {\n                productIds.push(item._id);\n            }\n        })\n\n        getCheckout({\n            variables: {products: productIds}\n        })\n    }\n\n\n    useEffect(() => {\n        if(data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session})\n            })\n        }\n    }, [data])\n    \n\n    if(!state.cartOpen) {\n        return (\n            <div className=\"cart-closed\" onClick={toggleCart}>\n              <span\n                role=\"img\"\n                aria-label=\"trash\">🛒</span>\n            </div>\n          );\n    }\n\n    console.log(state);\n\n\n  return (\n    // <div className=\"cart\">\n    //   <div className=\"close\" onClick={toggleCart}>[close]</div>\n    //   <h2>Shopping Cart</h2>\n    //   <div>\n    //       <CartItem item={{name:'Camera', image:'camera.jpg', price:5, purchaseQuantity:3}} />\n    //       <CartItem item={{name:'Soap', image:'soap.jpg', price:6, purchaseQuantity:4}} />\n\n    //       <div className=\"flex-row space-between\">\n    //         <strong>Total: $0</strong>\n    //         {\n    //           Auth.loggedIn() ?\n    //             <button>\n    //               Checkout\n    //             </button>\n    //             :\n    //             <span>(log in to check out)</span>\n    //         }\n    //       </div>\n    //     </div>\n    // </div>\n    <div className=\"cart\">\n  <div className=\"close\" onClick={toggleCart}>[close]</div>\n  <h2>Shopping Cart</h2>\n  {state.cart.length ? (\n    <div>\n      {state.cart.map(item => (\n        <CartItem key={item._id} item={item} />\n      ))}\n      <div className=\"flex-row space-between\">\n        <strong>Total: ${calculateTotal()}</strong>\n        {\n          Auth.loggedIn() ?\n            <button onClick={submitCheckout}>\n              Checkout\n            </button>\n            :\n            <span>(log in to check out)</span>\n        }\n      </div>\n    </div>\n  ) : (\n    <h3>\n      <span role=\"img\" aria-label=\"shocked\">\n        😱\n      </span>\n      You haven't added anything to your cart yet!\n    </h3>\n  )}\n</div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from './actions';\n\n\nconst defaultState = {\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: '',\n}\n\n\n\nconst reducer = (state=defaultState, action) => {\n  switch (action.type) {\n      //if action type value is the value of 'UPDATE_PRODUCTS', return a new state object with an updated products array \n      case UPDATE_PRODUCTS:\n          return {\n              ...state,\n              products: [...action.products]\n          };\n\n          //if action type value is value of 'UPDATE_CATEGORIES', return a new state object with an updated categories array\n      case UPDATE_CATEGORIES:\n          return {\n              ...state,\n              categories: [...action.categories]\n          };\n      \n      case UPDATE_CURRENT_CATEGORY: \n          return {\n              ...state,\n              currentCategory: action.currentCategory\n          };\n\n      case ADD_TO_CART: \n          return {\n              ...state,\n              cartOpen: true,\n              cart: [...state.cart, action.product]\n          };\n\n      case ADD_MULTIPLE_TO_CART:\n          return {\n              ...state,\n              cart: [...state.cart, ...action.products]\n          };\n\n      case REMOVE_FROM_CART:\n          let newState = state.cart.filter(product => {\n              return product._id !== action._id;\n          });\n          \n          return {\n              ...state,\n              cartOpen: newState.length > 0,\n              cart: newState\n          };\n\n      case UPDATE_CART_QUANTITY: \n          return {\n              ...state,\n              cartOpen: true,\n              cart: state.cart.map(product => {\n                  if(action._id === product._id) {\n                      product.purchaseQuantity = action.purchaseQuantity;\n                  }\n\n                  return product;\n              })\n          };\n\n      case CLEAR_CART:\n          return {\n              ...state,\n              cartOpen: false,\n              cart: []\n          };\n\n\n      case TOGGLE_CART:\n          return {\n              ...state,\n              cartOpen: !state.cartOpen\n          }\n\n      \n\n          //if it's none of these actions, do not update the state at all and keep things the same\n      default:\n          return state;\n  }\n}\n\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from '../utils/reducers'\n\nconst store = createStore(reducer);\nexport default store;","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}