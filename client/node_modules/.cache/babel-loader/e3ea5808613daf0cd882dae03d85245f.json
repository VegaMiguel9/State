{"ast":null,"code":"import { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, ADD_TO_CART, ADD_MULTIPLE_TO_CART, REMOVE_FROM_CART, UPDATE_CART_QUANTITY, CLEAR_CART, TOGGLE_CART } from './actions';\nconst defaultState = {\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: ''\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    //if action type value is the value of 'UPDATE_PRODUCTS', return a new state object with an updated products array \n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products]\n      };\n\n    //if action type value is value of 'UPDATE_CATEGORIES', return a new state object with an updated categories array\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories]\n      };\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      };\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products]\n      };\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        })\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    //if it's none of these actions, do not update the state at all and keep things the same\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CLEAR_CART","TOGGLE_CART","defaultState","products","cart","cartOpen","categories","currentCategory","reducer","state","arguments","length","undefined","action","type","product","newState","filter","_id","map","purchaseQuantity"],"sources":["/Users/vega/bootcamp/hw/State/client/src/utils/reducers.js"],"sourcesContent":["import {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from './actions';\n\n\nconst defaultState = {\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: '',\n}\n\n\n\nconst reducer = (state=defaultState, action) => {\n  switch (action.type) {\n      //if action type value is the value of 'UPDATE_PRODUCTS', return a new state object with an updated products array \n      case UPDATE_PRODUCTS:\n          return {\n              ...state,\n              products: [...action.products]\n          };\n\n          //if action type value is value of 'UPDATE_CATEGORIES', return a new state object with an updated categories array\n      case UPDATE_CATEGORIES:\n          return {\n              ...state,\n              categories: [...action.categories]\n          };\n      \n      case UPDATE_CURRENT_CATEGORY: \n          return {\n              ...state,\n              currentCategory: action.currentCategory\n          };\n\n      case ADD_TO_CART: \n          return {\n              ...state,\n              cartOpen: true,\n              cart: [...state.cart, action.product]\n          };\n\n      case ADD_MULTIPLE_TO_CART:\n          return {\n              ...state,\n              cart: [...state.cart, ...action.products]\n          };\n\n      case REMOVE_FROM_CART:\n          let newState = state.cart.filter(product => {\n              return product._id !== action._id;\n          });\n          \n          return {\n              ...state,\n              cartOpen: newState.length > 0,\n              cart: newState\n          };\n\n      case UPDATE_CART_QUANTITY: \n          return {\n              ...state,\n              cartOpen: true,\n              cart: state.cart.map(product => {\n                  if(action._id === product._id) {\n                      product.purchaseQuantity = action.purchaseQuantity;\n                  }\n\n                  return product;\n              })\n          };\n\n      case CLEAR_CART:\n          return {\n              ...state,\n              cartOpen: false,\n              cart: []\n          };\n\n\n      case TOGGLE_CART:\n          return {\n              ...state,\n              cartOpen: !state.cartOpen\n          }\n\n      \n\n          //if it's none of these actions, do not update the state at all and keep things the same\n      default:\n          return state;\n  }\n}\n\n\nexport default reducer;"],"mappings":"AAAA,SACEA,eAAe,EACfC,iBAAiB,EACjBC,uBAAuB,EACvBC,WAAW,EACXC,oBAAoB,EACpBC,gBAAgB,EAChBC,oBAAoB,EACpBC,UAAU,EACVC,WAAW,QACN,WAAW;AAGlB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,EAAE;EACRC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,EAAE;EACdC,eAAe,EAAE;AACnB,CAAC;AAID,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAgC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACR,YAAY;EAAA,IAAEW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,QAAQC,MAAM,CAACC,IAAI;IACf;IACA,KAAKrB,eAAe;MAChB,OAAO;QACH,GAAGgB,KAAK;QACRN,QAAQ,EAAE,CAAC,GAAGU,MAAM,CAACV,QAAQ;MACjC,CAAC;;IAED;IACJ,KAAKT,iBAAiB;MAClB,OAAO;QACH,GAAGe,KAAK;QACRH,UAAU,EAAE,CAAC,GAAGO,MAAM,CAACP,UAAU;MACrC,CAAC;IAEL,KAAKX,uBAAuB;MACxB,OAAO;QACH,GAAGc,KAAK;QACRF,eAAe,EAAEM,MAAM,CAACN;MAC5B,CAAC;IAEL,KAAKX,WAAW;MACZ,OAAO;QACH,GAAGa,KAAK;QACRJ,QAAQ,EAAE,IAAI;QACdD,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAI,EAAES,MAAM,CAACE,OAAO;MACxC,CAAC;IAEL,KAAKlB,oBAAoB;MACrB,OAAO;QACH,GAAGY,KAAK;QACRL,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAI,EAAE,GAAGS,MAAM,CAACV,QAAQ;MAC5C,CAAC;IAEL,KAAKL,gBAAgB;MACjB,IAAIkB,QAAQ,GAAGP,KAAK,CAACL,IAAI,CAACa,MAAM,CAACF,OAAO,IAAI;QACxC,OAAOA,OAAO,CAACG,GAAG,KAAKL,MAAM,CAACK,GAAG;MACrC,CAAC,CAAC;MAEF,OAAO;QACH,GAAGT,KAAK;QACRJ,QAAQ,EAAEW,QAAQ,CAACL,MAAM,GAAG,CAAC;QAC7BP,IAAI,EAAEY;MACV,CAAC;IAEL,KAAKjB,oBAAoB;MACrB,OAAO;QACH,GAAGU,KAAK;QACRJ,QAAQ,EAAE,IAAI;QACdD,IAAI,EAAEK,KAAK,CAACL,IAAI,CAACe,GAAG,CAACJ,OAAO,IAAI;UAC5B,IAAGF,MAAM,CAACK,GAAG,KAAKH,OAAO,CAACG,GAAG,EAAE;YAC3BH,OAAO,CAACK,gBAAgB,GAAGP,MAAM,CAACO,gBAAgB;UACtD;UAEA,OAAOL,OAAO;QAClB,CAAC;MACL,CAAC;IAEL,KAAKf,UAAU;MACX,OAAO;QACH,GAAGS,KAAK;QACRJ,QAAQ,EAAE,KAAK;QACfD,IAAI,EAAE;MACV,CAAC;IAGL,KAAKH,WAAW;MACZ,OAAO;QACH,GAAGQ,KAAK;QACRJ,QAAQ,EAAE,CAACI,KAAK,CAACJ;MACrB,CAAC;;IAID;IACJ;MACI,OAAOI,KAAK;EAAC;AAEvB,CAAC;AAGD,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}